{
  "$schema": "http://schema.management.azure.com/schemas/2014-04-01-preview/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "clusterLocation": {
      "type": "string",
      "metadata": {
        "description": "Location of the Cluster"
      }
    },
    "clusterName": {
      "type": "string",
      "defaultValue": "Cluster",
      "metadata": {
        "description": "Name of your cluster - Between 3 and 23 characters.  Lowercase letters and numbers"
      }
    },
    "fabricTcpGatewayPort": {
      "type": "int",
      "defaultValue": 19000,
      "metadata": {
        "description": "TCP Client Connection end point to perform management operations on this cluster"
      }
    },
    "fabricHttpGatewayPort": {
      "type": "int",
      "defaultValue": 19080,
      "metadata": {
        "description": "Http Client Connection end point to perform management operations on this cluster"
      }
    },
    "adminUserName": {
      "type": "string",
      "defaultValue": "testadm"
    },
    "adminPassword": {
      "type": "securestring"
    },
    "loadBalancedAppPort1": {
      "type": "int",
      "defaultValue": 80
    },
    "loadBalancedAppPort2": {
      "type": "int",
      "defaultValue": 8081
    },
    "storageAccountType": {
      "type": "string",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS"
      ],
      "defaultValue": "Standard_LRS",
      "metadata": {
        "description": "Replication option for the VM image storage account"
      }
    },
    "supportLogStorageAccountType": {
      "type": "string",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS"
      ],
      "defaultValue": "Standard_LRS",
      "metadata": {
        "description": "Replication option for the support log storage account"
      }
    }
  },
  "variables": {
    "computeLocation": "[parameters('clusterLocation')]",
    "dnsName": "[parameters('clusterName')]",
    "vmStorageAccountName": "[concat(parameters('clusterName'),'1')]",
    "vmName": "vm",
    "applicationStartPort": "20000",
    "applicationEndPort": "30000",
    "ephemeralStartPort": "49152",
    "ephemeralEndPort": "65534",
    "publicIPAddressName": "PublicIP-VM",
    "publicIPAddressType": "Dynamic",
    "vmStorageAccountContainerName": "vhds",
    "virtualNetworkName": "VNet",
    "addressPrefix": "10.0.0.0/16",
    "subnet1Name": "Subnet-1",
    "subnet2Name": "Subnet-2",
    "subnet1Prefix": "10.0.0.0/24",
    "subnet2Prefix": "10.0.1.0/24",
    "nicName": "NIC",
    "lbName": "LoadBalancer",
    "lbIPName": "PublicIP-LB-FE",
    "availSetName": "AvailabilitySet",
    "maxPercentUpgradeDomainDeltaUnhealthyNodes": "100",
    "vmImagePublisher": "MicrosoftWindowsServer",
    "vmImageOffer": "WindowsServer",
    "vmImageSku": "2012-R2-Datacenter",
    "vmImageVersion": "latest",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnet1Ref": "[concat(variables('vnetID'),'/subnets/',variables('subnet1Name'))]",
    "supportLogStorageAccountName": "[concat(parameters('clusterName'),'2')]",
    "lbID0": "[resourceId('Microsoft.Network/loadBalancers',concat(variables('lbName'),'-','0'))]",
    "lbIPConfig0": "[concat(variables('lbID0'),'/frontendIPConfigurations/LoadBalancerIPConfig')]",
    "lbPoolID0": "[concat(variables('lbID0'),'/backendAddressPools/LoadBalancerBEAddressPool')]",
    "lbProbeID0": "[concat(variables('lbID0'),'/probes/FabricGatewayProbe')]",
    "lbHttpProbeID0": "[concat(variables('lbID0'),'/probes/FabricHttpGatewayProbe')]",
    "vmNodeType0Name": "[concat('LoadGen', variables('vmName'))]",
    "vmNodeType0Size": "Standard_A2",
    "lbID1": "[resourceId('Microsoft.Network/loadBalancers',concat(variables('lbName'),'-','1'))]",
    "lbIPConfig1": "[concat(variables('lbID1'),'/frontendIPConfigurations/LoadBalancerIPConfig')]",
    "lbPoolID1": "[concat(variables('lbID1'),'/backendAddressPools/LoadBalancerBEAddressPool')]",
    "lbProbeID1": "[concat(variables('lbID1'),'/probes/FabricGatewayProbe')]",
    "lbHttpProbeID1": "[concat(variables('lbID1'),'/probes/FabricHttpGatewayProbe')]",
    "vmNodeType1Name": "[concat('Web', variables('vmName'))]",
    "vmNodeType1Size": "Standard_A2",
    "lbID2": "[resourceId('Microsoft.Network/loadBalancers',concat(variables('lbName'),'-','2'))]",
    "lbIPConfig2": "[concat(variables('lbID2'),'/frontendIPConfigurations/LoadBalancerIPConfig')]",
    "lbPoolID2": "[concat(variables('lbID2'),'/backendAddressPools/LoadBalancerBEAddressPool')]",
    "lbProbeID2": "[concat(variables('lbID2'),'/probes/FabricGatewayProbe')]",
    "lbHttpProbeID2": "[concat(variables('lbID2'),'/probes/FabricHttpGatewayProbe')]",
    "vmNodeType2Name": "[concat('Backend', variables('vmName'))]",
    "vmNodeType2Size": "Standard_D4"
  },
  "resources": [
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('vmStorageAccountName')]",
      "location": "[variables('computeLocation')]",
      "properties": {
        "accountType": "[parameters('storageAccountType')]"
      },
      "tags": {
        "resourceType": "Service Fabric",
        "clusterName": "[parameters('clusterName')]"
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('supportLogStorageAccountName')]",
      "location": "[variables('computeLocation')]",
      "properties": {
        "accountType": "[parameters('supportLogStorageAccountType')]"
      },
      "tags": {
        "resourceType": "Service Fabric",
        "clusterName": "[parameters('clusterName')]"
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('computeLocation')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnet1Name')]",
            "properties": {
              "addressPrefix": "[variables('subnet1Prefix')]"
            }
          },
          {
            "name": "[variables('subnet2Name')]",
            "properties": {
              "addressPrefix": "[variables('subnet2Prefix')]"
            }
          }
        ]
      },
      "tags": {
        "resourceType": "Service Fabric",
        "clusterName": "[parameters('clusterName')]"
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[concat(variables('availSetName'),'-',0)]",
      "location": "[variables('computeLocation')]",
      "properties": {
        "platformUpdateDomainCount": 3,
        "platformFaultDomainCount": 3
      },
      "tags": {
        "resourceType": "Service Fabric",
        "clusterName": "[parameters('clusterName')]"
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('nicName'),'-',0,'-',copyIndex(0))]",
      "location": "[variables('computeLocation')]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[concat('Microsoft.Network/loadBalancers/', variables('lbName'),'-','0')]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "IPConfig",
            "properties": {
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[variables('lbPoolID0')]"
                }
              ],
              "loadBalancerInboundNatRules": [
                {
                  "id": "[concat(variables('lbID0'),'/inboundNatRules/RDP-VM-0-',copyIndex(0))]"
                }
              ],
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnet1Ref')]"
              }
            }
          }
        ]
      },
      "copy": {
        "name": "nicLoop",
        "count": 5
      },
      "tags": {
        "resourceType": "Service Fabric",
        "clusterName": "[parameters('clusterName')]"
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmNodeType0Name'),copyIndex(0),'/ServiceFabricNode')]",
      "location": "[variables('computeLocation')]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmNodeType0Name'), copyIndex(0))]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('supportLogStorageAccountName'))]"
      ],
      "properties": {
        "type": "ServiceFabricNode",
        "autoUpgradeMinorVersion": false,
        "protectedSettings": {
          "StorageAccountKey1": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('supportLogStorageAccountName')),'2015-05-01-preview').key1]",
          "StorageAccountKey2": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('supportLogStorageAccountName')),'2015-05-01-preview').key2]"
        },
        "publisher": "Microsoft.Azure.ServiceFabric",
        "settings": {
          "clusterEndpoint": "[reference(parameters('clusterName')).clusterEndpoint]",
          "nodeTypeRef": "LoadGen",
          "dataPath": "D:\\SvcFab"
        },
        "typeHandlerVersion": "1.0"
      },
      "copy": {
        "name": "vmExtensionLoop",
        "count": 5
      },
      "tags": {
        "resourceType": "Service Fabric",
        "clusterName": "[parameters('clusterName')]"
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('vmNodeType0Name'),copyIndex(0))]",
      "location": "[variables('computeLocation')]",
      "dependsOn": [
        "[concat('Microsoft.Compute/availabilitySets/', variables('availSetName'),'-',0)]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('vmStorageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', concat(variables('nicName'),'-',0,'-',copyIndex(0)))]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', concat(variables('availSetName'),'-',0))]"
        },
        "hardwareProfile": {
          "vmSize": "[variables('vmNodeType0Size')]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('nicName'),'-',0,'-',copyIndex(0)))]"
            }
          ]
        },
        "osProfile": {
          "adminPassword": "[parameters('adminPassword')]",
          "adminUsername": "[parameters('adminUsername')]",
          "computername": "[concat(variables('vmNodeType0Name'),copyIndex(0))]",
          "windowsConfiguration": {
            "enableAutomaticUpdates": false,
            "provisionVMAgent": true
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('vmImagePublisher')]",
            "offer": "[variables('vmImageOffer')]",
            "sku": "[variables('vmImageSku')]",
            "version": "[variables('vmImageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://',variables('vmStorageAccountName'),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/',resourcegroup().name,'-',variables('vmNodeType0Name'),copyIndex(0),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        }
      },
      "copy": {
        "name": "vmLoop",
        "count": 5
      },
      "tags": {
        "resourceType": "Service Fabric",
        "clusterName": "[parameters('clusterName')]"
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(variables('lbIPName'),'-','0')]",
      "location": "[variables('computeLocation')]",
      "properties": {
        "dnsSettings": {          
          "domainNameLabel": "[concat(variables('dnsName'),'-','web')]"
        },
        "publicIPAllocationMethod": "Dynamic"
      },
      "tags": {
        "resourceType": "Service Fabric",
        "clusterName": "[parameters('clusterName')]"
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/loadBalancers",
      "name": "[concat(variables('lbName'),'-','0')]",
      "location": "[variables('computeLocation')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/',concat(variables('lbIPName'),'-','0'))]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "LoadBalancerIPConfig",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',concat(variables('lbIPName'),'-','0'))]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "LoadBalancerBEAddressPool",
            "properties": {}
          }
        ],
        "inboundNatRules": [
          {
            "name": "RDP-VM-0-0",
            "properties": {
              "backendPort": "3389",
              "frontendIPConfiguration": {
                "id": "[variables('lbIPConfig0')]"
              },
              "frontendPort": "33000",
              "protocol": "tcp"
            }
          },
          {
            "name": "RDP-VM-0-1",
            "properties": {
              "backendPort": "3389",
              "frontendIPConfiguration": {
                "id": "[variables('lbIPConfig0')]"
              },
              "frontendPort": "33001",
              "protocol": "tcp"
            }
          },
          {
            "name": "RDP-VM-0-2",
            "properties": {
              "backendPort": "3389",
              "frontendIPConfiguration": {
                "id": "[variables('lbIPConfig0')]"
              },
              "frontendPort": "33002",
              "protocol": "tcp"
            }
          },
          {
            "name": "RDP-VM-0-3",
            "properties": {
              "backendPort": "3389",
              "frontendIPConfiguration": {
                "id": "[variables('lbIPConfig0')]"
              },
              "frontendPort": "33003",
              "protocol": "tcp"
            }
          },
          {
            "name": "RDP-VM-0-4",
            "properties": {
              "backendPort": "3389",
              "frontendIPConfiguration": {
                "id": "[variables('lbIPConfig0')]"
              },
              "frontendPort": "33004",
              "protocol": "tcp"
            }
          }
        ],
        "loadBalancingRules": [
          {
            "name": "LBRule",
            "properties": {
              "backendAddressPool": {
                "id": "[variables('lbPoolID0')]"
              },
              "backendPort": "[parameters('fabricTcpGatewayPort')]",
              "enableFloatingIP": "false",
              "frontendIPConfiguration": {
                "id": "[variables('lbIPConfig0')]"
              },
              "frontendPort": "[parameters('fabricTcpGatewayPort')]",
              "idleTimeoutInMinutes": "5",
              "probe": {
                "id": "[variables('lbProbeID0')]"
              },
              "protocol": "tcp"
            }
          },
          {
            "name": "LBHttpRule",
            "properties": {
              "backendAddressPool": {
                "id": "[variables('lbPoolID0')]"
              },
              "backendPort": "[parameters('fabricHttpGatewayPort')]",
              "enableFloatingIP": "false",
              "frontendIPConfiguration": {
                "id": "[variables('lbIPConfig0')]"
              },
              "frontendPort": "[parameters('fabricHttpGatewayPort')]",
              "idleTimeoutInMinutes": "5",
              "probe": {
                "id": "[variables('lbHttpProbeID0')]"
              },
              "protocol": "tcp"
            }
          },
          {
            "name": "AppPortLBRule1",
            "properties": {
              "backendAddressPool": {
                "id": "[variables('lbPoolID0')]"
              },
              "backendPort": "[parameters('loadBalancedAppPort1')]",
              "enableFloatingIP": "false",
              "frontendIPConfiguration": {
                "id": "[variables('lbIPConfig0')]"
              },
              "frontendPort": "[parameters('loadBalancedAppPort1')]",
              "idleTimeoutInMinutes": "5",
              "probe": {
                "id": "[concat(variables('lbID0'),'/probes/AppPortProbe1')]"
              },
              "protocol": "tcp"
            }
          },
          {
            "name": "AppPortLBRule2",
            "properties": {
              "backendAddressPool": {
                "id": "[variables('lbPoolID0')]"
              },
              "backendPort": "[parameters('loadBalancedAppPort2')]",
              "enableFloatingIP": "false",
              "frontendIPConfiguration": {
                "id": "[variables('lbIPConfig0')]"
              },
              "frontendPort": "[parameters('loadBalancedAppPort2')]",
              "idleTimeoutInMinutes": "5",
              "probe": {
                "id": "[concat(variables('lbID0'),'/probes/AppPortProbe2')]"
              },
              "protocol": "tcp"
            }
          }
        ],
        "probes": [
          {
            "name": "FabricGatewayProbe",
            "properties": {
              "intervalInSeconds": 5,
              "numberOfProbes": 2,
              "port": "[parameters('fabricTcpGatewayPort')]",
              "protocol": "tcp"
            }
          },
          {
            "name": "FabricHttpGatewayProbe",
            "properties": {
              "intervalInSeconds": 5,
              "numberOfProbes": 2,
              "port": "[parameters('fabricHttpGatewayPort')]",
              "protocol": "tcp"
            }
          },
          {
            "name": "AppPortProbe1",
            "properties": {
              "intervalInSeconds": 5,
              "numberOfProbes": 2,
              "port": "[parameters('loadBalancedAppPort1')]",
              "protocol": "tcp"
            }
          },
          {
            "name": "AppPortProbe2",
            "properties": {
              "intervalInSeconds": 5,
              "numberOfProbes": 2,
              "port": "[parameters('loadBalancedAppPort2')]",
              "protocol": "tcp"
            }
          }
        ]
      },
      "tags": {
        "resourceType": "Service Fabric",
        "clusterName": "[parameters('clusterName')]"
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[concat(variables('availSetName'),'-',1)]",
      "location": "[variables('computeLocation')]",
      "properties": {
        "platformUpdateDomainCount": 3,
        "platformFaultDomainCount": 3
      },
      "tags": {
        "resourceType": "Service Fabric",
        "clusterName": "[parameters('clusterName')]"
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('nicName'),'-',1,'-',copyIndex(0))]",
      "location": "[variables('computeLocation')]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[concat('Microsoft.Network/loadBalancers/', variables('lbName'),'-','1')]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "IPConfig",
            "properties": {
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[variables('lbPoolID1')]"
                }
              ],
              "loadBalancerInboundNatRules": [
                {
                  "id": "[concat(variables('lbID1'),'/inboundNatRules/RDP-VM-1-',copyIndex(0))]"
                }
              ],
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnet1Ref')]"
              }
            }
          }
        ]
      },
      "copy": {
        "name": "nicLoop",
        "count": 3
      },
      "tags": {
        "resourceType": "Service Fabric",
        "clusterName": "[parameters('clusterName')]"
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmNodeType1Name'),copyIndex(0),'/ServiceFabricNode')]",
      "location": "[variables('computeLocation')]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmNodeType1Name'), copyIndex(0))]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('supportLogStorageAccountName'))]"
      ],
      "properties": {
        "type": "ServiceFabricNode",
        "autoUpgradeMinorVersion": false,
        "protectedSettings": {
          "StorageAccountKey1": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('supportLogStorageAccountName')),'2015-05-01-preview').key1]",
          "StorageAccountKey2": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('supportLogStorageAccountName')),'2015-05-01-preview').key2]"
        },
        "publisher": "Microsoft.Azure.ServiceFabric",
        "settings": {
          "clusterEndpoint": "[reference(parameters('clusterName')).clusterEndpoint]",
          "nodeTypeRef": "Web",
          "dataPath": "D:\\SvcFab"
        },
        "typeHandlerVersion": "1.0"
      },
      "copy": {
        "name": "vmExtensionLoop",
        "count": 3
      },
      "tags": {
        "resourceType": "Service Fabric",
        "clusterName": "[parameters('clusterName')]"
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('vmNodeType1Name'),copyIndex(0))]",
      "location": "[variables('computeLocation')]",
      "dependsOn": [
        "[concat('Microsoft.Compute/availabilitySets/', variables('availSetName'),'-',1)]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('vmStorageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', concat(variables('nicName'),'-',1,'-',copyIndex(0)))]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', concat(variables('availSetName'),'-',1))]"
        },
        "hardwareProfile": {
          "vmSize": "[variables('vmNodeType1Size')]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('nicName'),'-',1,'-',copyIndex(0)))]"
            }
          ]
        },
        "osProfile": {
          "adminPassword": "[parameters('adminPassword')]",
          "adminUsername": "[parameters('adminUsername')]",
          "computername": "[concat(variables('vmNodeType1Name'),copyIndex(0))]",
          "windowsConfiguration": {
            "enableAutomaticUpdates": false,
            "provisionVMAgent": true
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('vmImagePublisher')]",
            "offer": "[variables('vmImageOffer')]",
            "sku": "[variables('vmImageSku')]",
            "version": "[variables('vmImageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://',variables('vmStorageAccountName'),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/',resourcegroup().name,'-',variables('vmNodeType1Name'),copyIndex(0),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        }
      },
      "copy": {
        "name": "vmLoop",
        "count": 3
      },
      "tags": {
        "resourceType": "Service Fabric",
        "clusterName": "[parameters('clusterName')]"
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(variables('lbIPName'),'-','1')]",
      "location": "[variables('computeLocation')]",
      "properties": {
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsName')]"
        },
        "publicIPAllocationMethod": "Dynamic"
      },
      "tags": {
        "resourceType": "Service Fabric",
        "clusterName": "[parameters('clusterName')]"
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/loadBalancers",
      "name": "[concat(variables('lbName'),'-','1')]",
      "location": "[variables('computeLocation')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/',concat(variables('lbIPName'),'-','1'))]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "LoadBalancerIPConfig",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',concat(variables('lbIPName'),'-','1'))]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "LoadBalancerBEAddressPool",
            "properties": {}
          }
        ],
        "inboundNatRules": [
          {
            "name": "RDP-VM-1-0",
            "properties": {
              "backendPort": "3389",
              "frontendIPConfiguration": {
                "id": "[variables('lbIPConfig1')]"
              },
              "frontendPort": "33000",
              "protocol": "tcp"
            }
          },
          {
            "name": "RDP-VM-1-1",
            "properties": {
              "backendPort": "3389",
              "frontendIPConfiguration": {
                "id": "[variables('lbIPConfig1')]"
              },
              "frontendPort": "33001",
              "protocol": "tcp"
            }
          },
          {
            "name": "RDP-VM-1-2",
            "properties": {
              "backendPort": "3389",
              "frontendIPConfiguration": {
                "id": "[variables('lbIPConfig1')]"
              },
              "frontendPort": "33002",
              "protocol": "tcp"
            }
          }
        ],
        "loadBalancingRules": [
          {
            "name": "LBRule",
            "properties": {
              "backendAddressPool": {
                "id": "[variables('lbPoolID1')]"
              },
              "backendPort": "[parameters('fabricTcpGatewayPort')]",
              "enableFloatingIP": "false",
              "frontendIPConfiguration": {
                "id": "[variables('lbIPConfig1')]"
              },
              "frontendPort": "[parameters('fabricTcpGatewayPort')]",
              "idleTimeoutInMinutes": "5",
              "probe": {
                "id": "[variables('lbProbeID1')]"
              },
              "protocol": "tcp"
            }
          },
          {
            "name": "LBHttpRule",
            "properties": {
              "backendAddressPool": {
                "id": "[variables('lbPoolID1')]"
              },
              "backendPort": "[parameters('fabricHttpGatewayPort')]",
              "enableFloatingIP": "false",
              "frontendIPConfiguration": {
                "id": "[variables('lbIPConfig1')]"
              },
              "frontendPort": "[parameters('fabricHttpGatewayPort')]",
              "idleTimeoutInMinutes": "5",
              "probe": {
                "id": "[variables('lbHttpProbeID1')]"
              },
              "protocol": "tcp"
            }
          },
          {
            "name": "AppPortLBRule1",
            "properties": {
              "backendAddressPool": {
                "id": "[variables('lbPoolID1')]"
              },
              "backendPort": "[parameters('loadBalancedAppPort1')]",
              "enableFloatingIP": "false",
              "frontendIPConfiguration": {
                "id": "[variables('lbIPConfig1')]"
              },
              "frontendPort": "[parameters('loadBalancedAppPort1')]",
              "idleTimeoutInMinutes": "5",
              "probe": {
                "id": "[concat(variables('lbID1'),'/probes/AppPortProbe1')]"
              },
              "protocol": "tcp"
            }
          },
          {
            "name": "AppPortLBRule2",
            "properties": {
              "backendAddressPool": {
                "id": "[variables('lbPoolID1')]"
              },
              "backendPort": "[parameters('loadBalancedAppPort2')]",
              "enableFloatingIP": "false",
              "frontendIPConfiguration": {
                "id": "[variables('lbIPConfig1')]"
              },
              "frontendPort": "[parameters('loadBalancedAppPort2')]",
              "idleTimeoutInMinutes": "5",
              "probe": {
                "id": "[concat(variables('lbID1'),'/probes/AppPortProbe2')]"
              },
              "protocol": "tcp"
            }
          }
        ],
        "probes": [
          {
            "name": "FabricGatewayProbe",
            "properties": {
              "intervalInSeconds": 5,
              "numberOfProbes": 2,
              "port": "[parameters('fabricTcpGatewayPort')]",
              "protocol": "tcp"
            }
          },
          {
            "name": "FabricHttpGatewayProbe",
            "properties": {
              "intervalInSeconds": 5,
              "numberOfProbes": 2,
              "port": "[parameters('fabricHttpGatewayPort')]",
              "protocol": "tcp"
            }
          },
          {
            "name": "AppPortProbe1",
            "properties": {
              "intervalInSeconds": 5,
              "numberOfProbes": 2,
              "port": "[parameters('loadBalancedAppPort1')]",
              "protocol": "tcp"
            }
          },
          {
            "name": "AppPortProbe2",
            "properties": {
              "intervalInSeconds": 5,
              "numberOfProbes": 2,
              "port": "[parameters('loadBalancedAppPort2')]",
              "protocol": "tcp"
            }
          }
        ]
      },
      "tags": {
        "resourceType": "Service Fabric",
        "clusterName": "[parameters('clusterName')]"
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[concat(variables('availSetName'),'-',2)]",
      "location": "[variables('computeLocation')]",
      "properties": {
        "platformUpdateDomainCount": 3,
        "platformFaultDomainCount": 3
      },
      "tags": {
        "resourceType": "Service Fabric",
        "clusterName": "[parameters('clusterName')]"
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('nicName'),'-',2,'-',copyIndex(0))]",
      "location": "[variables('computeLocation')]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[concat('Microsoft.Network/loadBalancers/', variables('lbName'),'-','2')]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "IPConfig",
            "properties": {
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[variables('lbPoolID2')]"
                }
              ],
              "loadBalancerInboundNatRules": [
                {
                  "id": "[concat(variables('lbID2'),'/inboundNatRules/RDP-VM-2-',copyIndex(0))]"
                }
              ],
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnet1Ref')]"
              }
            }
          }
        ]
      },
      "copy": {
        "name": "nicLoop",
        "count": 32
      },
      "tags": {
        "resourceType": "Service Fabric",
        "clusterName": "[parameters('clusterName')]"
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmNodeType2Name'),copyIndex(0),'/ServiceFabricNode')]",
      "location": "[variables('computeLocation')]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmNodeType2Name'), copyIndex(0))]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('supportLogStorageAccountName'))]"
      ],
      "properties": {
        "type": "ServiceFabricNode",
        "autoUpgradeMinorVersion": false,
        "protectedSettings": {
          "StorageAccountKey1": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('supportLogStorageAccountName')),'2015-05-01-preview').key1]",
          "StorageAccountKey2": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('supportLogStorageAccountName')),'2015-05-01-preview').key2]"
        },
        "publisher": "Microsoft.Azure.ServiceFabric",
        "settings": {
          "clusterEndpoint": "[reference(parameters('clusterName')).clusterEndpoint]",
          "nodeTypeRef": "Backend",
          "dataPath": "D:\\SvcFab"
        },
        "typeHandlerVersion": "1.0"
      },
      "copy": {
        "name": "vmExtensionLoop",
        "count": 32
      },
      "tags": {
        "resourceType": "Service Fabric",
        "clusterName": "[parameters('clusterName')]"
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('vmNodeType2Name'),copyIndex(0))]",
      "location": "[variables('computeLocation')]",
      "dependsOn": [
        "[concat('Microsoft.Compute/availabilitySets/', variables('availSetName'),'-',2)]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('vmStorageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', concat(variables('nicName'),'-',2,'-',copyIndex(0)))]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', concat(variables('availSetName'),'-',2))]"
        },
        "hardwareProfile": {
          "vmSize": "[variables('vmNodeType2Size')]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('nicName'),'-',2,'-',copyIndex(0)))]"
            }
          ]
        },
        "osProfile": {
          "adminPassword": "[parameters('adminPassword')]",
          "adminUsername": "[parameters('adminUsername')]",
          "computername": "[concat(variables('vmNodeType2Name'),copyIndex(0))]",
          "windowsConfiguration": {
            "enableAutomaticUpdates": false,
            "provisionVMAgent": true
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('vmImagePublisher')]",
            "offer": "[variables('vmImageOffer')]",
            "sku": "[variables('vmImageSku')]",
            "version": "[variables('vmImageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://',variables('vmStorageAccountName'),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/',resourcegroup().name,'-',variables('vmNodeType2Name'),copyIndex(0),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        }
      },
      "copy": {
        "name": "vmLoop",
        "count": 32
      },
      "tags": {
        "resourceType": "Service Fabric",
        "clusterName": "[parameters('clusterName')]"
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(variables('lbIPName'),'-','2')]",
      "location": "[variables('computeLocation')]",
      "properties": {
        "dnsSettings": {
          "domainNameLabel": "[concat(variables('dnsName'),'-','backend')]"
        },
        "publicIPAllocationMethod": "Dynamic"
      },
      "tags": {
        "resourceType": "Service Fabric",
        "clusterName": "[parameters('clusterName')]"
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/loadBalancers",
      "name": "[concat(variables('lbName'),'-','2')]",
      "location": "[variables('computeLocation')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/',concat(variables('lbIPName'),'-','2'))]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "LoadBalancerIPConfig",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',concat(variables('lbIPName'),'-','2'))]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "LoadBalancerBEAddressPool",
            "properties": {}
          }
        ],
        "inboundNatRules": [
          {
            "name": "RDP-VM-2-0",
            "properties": {
              "backendPort": "3389",
              "frontendIPConfiguration": {
                "id": "[variables('lbIPConfig2')]"
              },
              "frontendPort": "33000",
              "protocol": "tcp"
            }
          },
          {
            "name": "RDP-VM-2-1",
            "properties": {
              "backendPort": "3389",
              "frontendIPConfiguration": {
                "id": "[variables('lbIPConfig2')]"
              },
              "frontendPort": "33001",
              "protocol": "tcp"
            }
          },
          {
            "name": "RDP-VM-2-2",
            "properties": {
              "backendPort": "3389",
              "frontendIPConfiguration": {
                "id": "[variables('lbIPConfig2')]"
              },
              "frontendPort": "33002",
              "protocol": "tcp"
            }
          },
          {
            "name": "RDP-VM-2-3",
            "properties": {
              "backendPort": "3389",
              "frontendIPConfiguration": {
                "id": "[variables('lbIPConfig2')]"
              },
              "frontendPort": "33003",
              "protocol": "tcp"
            }
          },
          {
            "name": "RDP-VM-2-4",
            "properties": {
              "backendPort": "3389",
              "frontendIPConfiguration": {
                "id": "[variables('lbIPConfig2')]"
              },
              "frontendPort": "33004",
              "protocol": "tcp"
            }
          },
          {
            "name": "RDP-VM-2-5",
            "properties": {
              "backendPort": "3389",
              "frontendIPConfiguration": {
                "id": "[variables('lbIPConfig2')]"
              },
              "frontendPort": "33005",
              "protocol": "tcp"
            }
          },
          {
            "name": "RDP-VM-2-6",
            "properties": {
              "backendPort": "3389",
              "frontendIPConfiguration": {
                "id": "[variables('lbIPConfig2')]"
              },
              "frontendPort": "33006",
              "protocol": "tcp"
            }
          },
          {
            "name": "RDP-VM-2-7",
            "properties": {
              "backendPort": "3389",
              "frontendIPConfiguration": {
                "id": "[variables('lbIPConfig2')]"
              },
              "frontendPort": "33007",
              "protocol": "tcp"
            }
          },
          {
            "name": "RDP-VM-2-8",
            "properties": {
              "backendPort": "3389",
              "frontendIPConfiguration": {
                "id": "[variables('lbIPConfig2')]"
              },
              "frontendPort": "33008",
              "protocol": "tcp"
            }
          },
          {
            "name": "RDP-VM-2-9",
            "properties": {
              "backendPort": "3389",
              "frontendIPConfiguration": {
                "id": "[variables('lbIPConfig2')]"
              },
              "frontendPort": "33009",
              "protocol": "tcp"
            }
          },
          {
            "name": "RDP-VM-2-10",
            "properties": {
              "backendPort": "3389",
              "frontendIPConfiguration": {
                "id": "[variables('lbIPConfig2')]"
              },
              "frontendPort": "33010",
              "protocol": "tcp"
            }
          },
          {
            "name": "RDP-VM-2-11",
            "properties": {
              "backendPort": "3389",
              "frontendIPConfiguration": {
                "id": "[variables('lbIPConfig2')]"
              },
              "frontendPort": "33011",
              "protocol": "tcp"
            }
          },
          {
            "name": "RDP-VM-2-12",
            "properties": {
              "backendPort": "3389",
              "frontendIPConfiguration": {
                "id": "[variables('lbIPConfig2')]"
              },
              "frontendPort": "33012",
              "protocol": "tcp"
            }
          },
          {
            "name": "RDP-VM-2-13",
            "properties": {
              "backendPort": "3389",
              "frontendIPConfiguration": {
                "id": "[variables('lbIPConfig2')]"
              },
              "frontendPort": "33013",
              "protocol": "tcp"
            }
          },
          {
            "name": "RDP-VM-2-14",
            "properties": {
              "backendPort": "3389",
              "frontendIPConfiguration": {
                "id": "[variables('lbIPConfig2')]"
              },
              "frontendPort": "33014",
              "protocol": "tcp"
            }
          },
          {
            "name": "RDP-VM-2-15",
            "properties": {
              "backendPort": "3389",
              "frontendIPConfiguration": {
                "id": "[variables('lbIPConfig2')]"
              },
              "frontendPort": "33015",
              "protocol": "tcp"
            }
          },
          {
            "name": "RDP-VM-2-16",
            "properties": {
              "backendPort": "3389",
              "frontendIPConfiguration": {
                "id": "[variables('lbIPConfig2')]"
              },
              "frontendPort": "33016",
              "protocol": "tcp"
            }
          },
          {
            "name": "RDP-VM-2-17",
            "properties": {
              "backendPort": "3389",
              "frontendIPConfiguration": {
                "id": "[variables('lbIPConfig2')]"
              },
              "frontendPort": "33017",
              "protocol": "tcp"
            }
          },
          {
            "name": "RDP-VM-2-18",
            "properties": {
              "backendPort": "3389",
              "frontendIPConfiguration": {
                "id": "[variables('lbIPConfig2')]"
              },
              "frontendPort": "33018",
              "protocol": "tcp"
            }
          },
          {
            "name": "RDP-VM-2-19",
            "properties": {
              "backendPort": "3389",
              "frontendIPConfiguration": {
                "id": "[variables('lbIPConfig2')]"
              },
              "frontendPort": "33019",
              "protocol": "tcp"
            }
          },
          {
            "name": "RDP-VM-2-20",
            "properties": {
              "backendPort": "3389",
              "frontendIPConfiguration": {
                "id": "[variables('lbIPConfig2')]"
              },
              "frontendPort": "33020",
              "protocol": "tcp"
            }
          },
          {
            "name": "RDP-VM-2-21",
            "properties": {
              "backendPort": "3389",
              "frontendIPConfiguration": {
                "id": "[variables('lbIPConfig2')]"
              },
              "frontendPort": "33021",
              "protocol": "tcp"
            }
          },
          {
            "name": "RDP-VM-2-22",
            "properties": {
              "backendPort": "3389",
              "frontendIPConfiguration": {
                "id": "[variables('lbIPConfig2')]"
              },
              "frontendPort": "33022",
              "protocol": "tcp"
            }
          },
          {
            "name": "RDP-VM-2-23",
            "properties": {
              "backendPort": "3389",
              "frontendIPConfiguration": {
                "id": "[variables('lbIPConfig2')]"
              },
              "frontendPort": "33023",
              "protocol": "tcp"
            }
          },
          {
            "name": "RDP-VM-2-24",
            "properties": {
              "backendPort": "3389",
              "frontendIPConfiguration": {
                "id": "[variables('lbIPConfig2')]"
              },
              "frontendPort": "33024",
              "protocol": "tcp"
            }
          },
          {
            "name": "RDP-VM-2-25",
            "properties": {
              "backendPort": "3389",
              "frontendIPConfiguration": {
                "id": "[variables('lbIPConfig2')]"
              },
              "frontendPort": "33025",
              "protocol": "tcp"
            }
          },
          {
            "name": "RDP-VM-2-26",
            "properties": {
              "backendPort": "3389",
              "frontendIPConfiguration": {
                "id": "[variables('lbIPConfig2')]"
              },
              "frontendPort": "33026",
              "protocol": "tcp"
            }
          },
          {
            "name": "RDP-VM-2-27",
            "properties": {
              "backendPort": "3389",
              "frontendIPConfiguration": {
                "id": "[variables('lbIPConfig2')]"
              },
              "frontendPort": "33027",
              "protocol": "tcp"
            }
          },
          {
            "name": "RDP-VM-2-28",
            "properties": {
              "backendPort": "3389",
              "frontendIPConfiguration": {
                "id": "[variables('lbIPConfig2')]"
              },
              "frontendPort": "33028",
              "protocol": "tcp"
            }
          },
          {
            "name": "RDP-VM-2-29",
            "properties": {
              "backendPort": "3389",
              "frontendIPConfiguration": {
                "id": "[variables('lbIPConfig2')]"
              },
              "frontendPort": "33029",
              "protocol": "tcp"
            }
          },
          {
            "name": "RDP-VM-2-30",
            "properties": {
              "backendPort": "3389",
              "frontendIPConfiguration": {
                "id": "[variables('lbIPConfig2')]"
              },
              "frontendPort": "33030",
              "protocol": "tcp"
            }
          },
          {
            "name": "RDP-VM-2-31",
            "properties": {
              "backendPort": "3389",
              "frontendIPConfiguration": {
                "id": "[variables('lbIPConfig2')]"
              },
              "frontendPort": "33031",
              "protocol": "tcp"
            }
          }
        ],
        "loadBalancingRules": [
          {
            "name": "LBRule",
            "properties": {
              "backendAddressPool": {
                "id": "[variables('lbPoolID2')]"
              },
              "backendPort": "[parameters('fabricTcpGatewayPort')]",
              "enableFloatingIP": "false",
              "frontendIPConfiguration": {
                "id": "[variables('lbIPConfig2')]"
              },
              "frontendPort": "[parameters('fabricTcpGatewayPort')]",
              "idleTimeoutInMinutes": "5",
              "probe": {
                "id": "[variables('lbProbeID2')]"
              },
              "protocol": "tcp"
            }
          },
          {
            "name": "LBHttpRule",
            "properties": {
              "backendAddressPool": {
                "id": "[variables('lbPoolID2')]"
              },
              "backendPort": "[parameters('fabricHttpGatewayPort')]",
              "enableFloatingIP": "false",
              "frontendIPConfiguration": {
                "id": "[variables('lbIPConfig2')]"
              },
              "frontendPort": "[parameters('fabricHttpGatewayPort')]",
              "idleTimeoutInMinutes": "5",
              "probe": {
                "id": "[variables('lbHttpProbeID2')]"
              },
              "protocol": "tcp"
            }
          },
          {
            "name": "AppPortLBRule1",
            "properties": {
              "backendAddressPool": {
                "id": "[variables('lbPoolID2')]"
              },
              "backendPort": "[parameters('loadBalancedAppPort1')]",
              "enableFloatingIP": "false",
              "frontendIPConfiguration": {
                "id": "[variables('lbIPConfig2')]"
              },
              "frontendPort": "[parameters('loadBalancedAppPort1')]",
              "idleTimeoutInMinutes": "5",
              "probe": {
                "id": "[concat(variables('lbID2'),'/probes/AppPortProbe1')]"
              },
              "protocol": "tcp"
            }
          },
          {
            "name": "AppPortLBRule2",
            "properties": {
              "backendAddressPool": {
                "id": "[variables('lbPoolID2')]"
              },
              "backendPort": "[parameters('loadBalancedAppPort2')]",
              "enableFloatingIP": "false",
              "frontendIPConfiguration": {
                "id": "[variables('lbIPConfig2')]"
              },
              "frontendPort": "[parameters('loadBalancedAppPort2')]",
              "idleTimeoutInMinutes": "5",
              "probe": {
                "id": "[concat(variables('lbID2'),'/probes/AppPortProbe2')]"
              },
              "protocol": "tcp"
            }
          }
        ],
        "probes": [
          {
            "name": "FabricGatewayProbe",
            "properties": {
              "intervalInSeconds": 5,
              "numberOfProbes": 2,
              "port": "[parameters('fabricTcpGatewayPort')]",
              "protocol": "tcp"
            }
          },
          {
            "name": "FabricHttpGatewayProbe",
            "properties": {
              "intervalInSeconds": 5,
              "numberOfProbes": 2,
              "port": "[parameters('fabricHttpGatewayPort')]",
              "protocol": "tcp"
            }
          },
          {
            "name": "AppPortProbe1",
            "properties": {
              "intervalInSeconds": 5,
              "numberOfProbes": 2,
              "port": "[parameters('loadBalancedAppPort1')]",
              "protocol": "tcp"
            }
          },
          {
            "name": "AppPortProbe2",
            "properties": {
              "intervalInSeconds": 5,
              "numberOfProbes": 2,
              "port": "[parameters('loadBalancedAppPort2')]",
              "protocol": "tcp"
            }
          }
        ]
      },
      "tags": {
        "resourceType": "Service Fabric",
        "clusterName": "[parameters('clusterName')]"
      }
    },
    {
      "apiVersion": "2015-01-01-alpha",
      "type": "Microsoft.ServiceFabric/clusters",
      "name": "[parameters('clusterName')]",
      "location": "[parameters('clusterLocation')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('supportLogStorageAccountName'))]"
      ],
      "properties": {
        "diagnosticsStorageAccountConfig": {
          "blobEndpoint": "[concat('https://',variables('supportLogStorageAccountName'),'.blob.core.windows.net/')]",
          "protectedAccountKeyName": "StorageAccountKey1",
          "queueEndpoint": "[concat('https://',variables('supportLogStorageAccountName'),'.queue.core.windows.net/')]",
          "storageAccountName": "[variables('supportLogStorageAccountName')]",
          "tableEndpoint": "[concat('https://',variables('supportLogStorageAccountName'),'.table.core.windows.net/')]"
        },
        "expectedVMResources": [
          {
            "name": "[variables('vmNodeType0Name')]",
            "nodeTypeRef": "LoadGen",
            "vmInstanceCount": 5
          },
          {
            "name": "[variables('vmNodeType1Name')]",
            "nodeTypeRef": "Web",
            "vmInstanceCount": 3
          },
          {
            "name": "[variables('vmNodeType2Name')]",
            "nodeTypeRef": "Backend",
            "vmInstanceCount": 32
          }
        ],
        "fabricSettings": [],
        "managementEndpoint": "[concat('http://',reference(concat(variables('lbIPName'),'-','0')).dnsSettings.fqdn,':',parameters('fabricHttpGatewayPort'))]",
        "nodeTypes": [
          {
            "name": "LoadGen",
            "applicationPorts": {
              "endPort": "[variables('applicationEndPort')]",
              "startPort": "[variables('applicationStartPort')]"
            },
            "clientConnectionEndpointPort": "[parameters('fabricTcpGatewayPort')]",
            "ephemeralPorts": {
              "endPort": "[variables('ephemeralEndPort')]",
              "startPort": "[variables('ephemeralStartPort')]"
            },
            "httpGatewayEndpointPort": "[parameters('fabricHttpGatewayPort')]",
            "isPrimary": false
          },
          {
            "name": "Web",
            "applicationPorts": {
              "endPort": "[variables('applicationEndPort')]",
              "startPort": "[variables('applicationStartPort')]"
            },
            "clientConnectionEndpointPort": "[parameters('fabricTcpGatewayPort')]",
            "ephemeralPorts": {
              "endPort": "[variables('ephemeralEndPort')]",
              "startPort": "[variables('ephemeralStartPort')]"
            },
            "httpGatewayEndpointPort": "[parameters('fabricHttpGatewayPort')]",
            "isPrimary": false
          },
          {
            "name": "Backend",
            "applicationPorts": {
              "endPort": "[variables('applicationEndPort')]",
              "startPort": "[variables('applicationStartPort')]"
            },
            "clientConnectionEndpointPort": "[parameters('fabricTcpGatewayPort')]",
            "ephemeralPorts": {
              "endPort": "[variables('ephemeralEndPort')]",
              "startPort": "[variables('ephemeralStartPort')]"
            },
            "httpGatewayEndpointPort": "[parameters('fabricHttpGatewayPort')]",
            "isPrimary": true
          }
        ]
      },
      "tags": {
        "resourceType": "Service Fabric",
        "clusterName": "[parameters('clusterName')]"
      }
    }
  ],
  "outputs": {
    "clusterProperties": {
      "value": "[reference(parameters('clusterName'))]",
      "type": "object"
    }
  }
}
